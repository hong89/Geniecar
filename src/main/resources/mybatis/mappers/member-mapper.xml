<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rental.geniecar.member.dao.MemberDao">

	<insert id="insertMember" parameterType="memberVo">
		INSERT INTO MEMBER(ID, PW, NAME, GENDER, BIRTHDAY, HP, ADDRESS, ADDRESS_DETAIL, ZIP_CODE, JOIN_DATE, LAST_LOGIN_DATE, WITHDRAWAL_YN, TYPE, BRANCH_CODE) 
		VALUES (#{id}, #{pw}, #{name}, #{gender}, #{birthday}, #{hp}, #{address}, #{addressDetail}, #{zipCode}, SYSDATE, SYSDATE, 'N','U', #{branchCode})	 
	</insert>
	
	<select id="overlapped" parameterType="String" resultType="String">
		SELECT DECODE(COUNT(*), 1, 'true', 0, 'false')
		FROM MEMBER
		WHERE ID = #{id}
    </select>
    
    <select id="selectOne" parameterType="String" resultType="memberVo">
		SELECT * FROM MEMBER WHERE ID = #{id}
    </select>
    
    <select id="countQNA">
		SELECT COUNT(*) FROM (SELECT * FROM BOARD WHERE TYPE_CODE ='QNA' AND REG_ID =#{id})
	</select>
    
    <update id="updateWithdrawalYn" parameterType="String">
		UPDATE MEMBER SET WITHDRAWAL_YN ='Y' WHERE ID = #{id}
	</update>
	
	<update id="updateMember" parameterType="memberVo">
		UPDATE MEMBER SET HP = #{hp}, ZIP_CODE = #{zipCode}, ADDRESS = #{address}, ADDRESS_DETAIL = #{addressDetail} WHERE ID= #{id}
	</update>
	
	<update id="updatePw" parameterType="memberVo">
		UPDATE MEMBER SET PW = #{pw} WHERE ID = #{id}
	</update>
	
	<select id="selectAllUser" resultType="memberVo" parameterType="com.rental.geniecar.domain.common.Pagination">
		SELECT NUM, ID ,PW ,NAME ,GENDER ,BIRTHDAY ,HP ,ADDRESS ,ADDRESS_DETAIL ,ZIP_CODE ,JOIN_DATE ,LAST_LOGIN_DATE ,WITHDRAWAL_YN ,
		BRANCH_CODE ,TYPE FROM (SELECT ROWNUM AS NUM, M.* FROM (SELECT * FROM MEMBER WHERE TYPE ='U' ORDER BY NAME) M)
		<if test="firstRecordIndex != null and lastRecordIndex != null">
            WHERE NUM BETWEEN #{firstRecordIndex} AND #{lastRecordIndex}
        </if>
    </select>
    <select id ="countUser" resultType="int" parameterType="com.rental.geniecar.domain.common.Pagination">
		SELECT COUNT(*) FROM MEMBER WHERE TYPE ='U'
	</select>
    
    <select id="selectAllBusiness" resultType="Map" parameterType="com.rental.geniecar.domain.common.Pagination">
		SELECT NUM, ID ,PW ,NAME ,GENDER ,BIRTHDAY ,HP ,ADDRESS ,ADDRESS_DETAIL ,ZIP_CODE ,JOIN_DATE ,LAST_LOGIN_DATE ,WITHDRAWAL_YN ,
		FN_COMM_NAME(BRANCH_CODE) AS BRANCH ,TYPE FROM (SELECT ROWNUM AS NUM, M.* FROM (SELECT * FROM MEMBER WHERE TYPE ='B' ORDER BY NAME) M)
		<if test="firstRecordIndex != null and lastRecordIndex != null">
            WHERE NUM BETWEEN #{firstRecordIndex} AND #{lastRecordIndex}
        </if>
    </select>
    
    <select id ="countBusiness" resultType="int" parameterType="com.rental.geniecar.domain.common.Pagination">
		SELECT COUNT(*) FROM MEMBER WHERE TYPE ='B'
	</select>
    
    <select id="selectWaiting" resultType="memberVo">
		SELECT * FROM MEMBER WHERE BRANCH_CODE IS NOT NUll and type = 'U'
	</select>
	
	<update id="updateType" parameterType="String">
		UPDATE MEMBER SET TYPE = 'B' WHERE ID = #{id}
	</update>
	
	<update id="updateWithdrawal">
		UPDATE MEMBER SET WITHDRAWAL_YN = 'K' WHERE ID = #{id}
	</update>
	
	<select id="selectAllMyReservation" parameterType="String" resultType="com.rental.geniecar.domain.member.MyReservationVo">
		SELECT RCR.RESERVATION_NO, FN_COMM_NAME(RCR.RENTAL_PLACE)RENTAL_PLACE_NAME, FN_COMM_NAME(RCR.RETURN_PLACE)RETURN_PLACE_NAME, RCR.RENTAL_DATE, RCR.RETURN_DATE, RCR.REG_DATE, NC.CAR_NAME, RCR.CANCEL_YN
		FROM RENTAL_CAR_RESERVATION RCR, RENTAL_CAR RC, NEW_CAR NC WHERE  RCR.CAR_IDENTIFICATION_NUMBER = RC.CAR_IDENTIFICATION_NUMBER AND RC.CAR_NO = NC.NO
		AND RESERVATION_MEMBER_ID = #{id} AND REG_DATE >= ADD_MONTHS(TRUNC(sysdate), -3)
	</select>
	
	<select id="selectOneReservation"  parameterType="String" resultType="com.rental.geniecar.domain.member.MyReservationVo">
		SELECT RESERVATION_NO,RENTAL_PLACE, FN_COMM_NAME(RCR.RENTAL_PLACE) RENTAL_PLACE_NAME , RETURN_PLACE, FN_COMM_NAME(RCR.RETURN_PLACE) RETURN_PLACE_NAME, RENTAL_DATE, RETURN_DATE, RESERVATION_MEMBER_ID, REG_DATE
		FROM RENTAL_CAR_RESERVATION RCR WHERE RESERVATION_NO = #{reservationNo}
	</select>
	
	<select id="selectBranchAddress" parameterType="String">
		select ROAD_ADDRESS from RENTAL_CAR_BRANCH where BRANCH_CODE = #{branchCode}
	</select>

	<select id="hasNaverMemberId" parameterType="String" resultType="String">
		SELECT DECODE(COUNT(*), 1, 'true', 0, 'false')
		FROM MEMBER
		WHERE ID = #{id}
	</select>

	<insert id="insertNaverMember" parameterType="memberVo">
        INSERT INTO MEMBER( ID
                          , PW
                          , NAME
                          , GENDER
                          , BIRTHDAY
                          , HP
                          , JOIN_DATE
                          , LAST_LOGIN_DATE
                          , SNS_CODE)
        VALUES ( #{id}
               , #{pw}
               , #{name}
               , #{gender}
               , #{birthday}
               , #{hp}
               , TO_DATE(SYSDATE, 'YYYY-MM-DD')
               , SYSDATE
               , #{snsCode})
    </insert>

	<select id="naverLogin" resultType="memberVo" parameterType="String">
		SELECT
			  ID
			, PW
			, NAME
            , GENDER
            , BIRTHDAY
            , HP
            , ADDRESS
            , ADDRESS_DETAIL
            , ZIP_CODE
            , JOIN_DATE
            , LAST_LOGIN_DATE
            , WITHDRAWAL_YN
            , BRANCH_CODE
            , TYPE
            , SNS_CODE
		    FROM MEMBER WHERE ID = #{naverId} AND SNS_CODE = 'N'
	</select>

	<select id="countPayment" >
		SELECT COUNT(*) FROM PAYMENT WHERE REG_ID = #{id}
	</select>
	
	<select id="countReservation" >
		SELECT COUNT(*) FROM RENTAL_CAR_RESERVATION WHERE RESERVATION_MEMBER_ID = #{id}
	</select>
	
	<select id="selectAllMyPayment" parameterType="String" resultType="com.rental.geniecar.domain.reservation.PaymentVo">
		SELECT PAY_NO ,APPLY_NUM ,BUYER_NAME ,BUYER_TEL ,CARD_NAME ,CARD_NUMBER ,CARD_QUOTA ,CURRENCY ,MERCHANT_UID ,
		NAME ,PAID_AMOUNT ,PAID_AT ,PAY_METHOD ,STATUS ,SUCCESS ,REG_ID FROM PAYMENT WHERE REG_ID = #{id} AND REG_DATE >= ADD_MONTHS(TRUNC(sysdate), -3)
	</select>
</mapper>